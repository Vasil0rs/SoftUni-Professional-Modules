package ShoppingSpree;

import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import java.util.Scanner;
import java.util.stream.Collectors;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner scanner = new Scanner(System.in);

        List<Person> people = Arrays.stream(scanner.nextLine().split(";"))
                .map((p -> {
                    String[] tokens = p.split("=");
                    String name = tokens[0];
                    double money = Double.parseDouble(tokens[1]);
                    try {
                        return new Person(name, money);
                    } catch (IllegalArgumentException ex) {
                        System.out.println(ex.getMessage());
                    }
                    return null;
                })).collect(Collectors.toList());

        List<Product> products = Arrays.stream(scanner.nextLine().split(";"))
                .map((p -> {
                    String[] tokens = p.split("=");
                    String name = tokens[0];
                    double cost = Double.parseDouble(tokens[1]);
                    try {
                        return new Product(name, cost);
                    } catch (IllegalArgumentException ex) {
                        System.out.println(ex.getMessage());
                    }
                    return null;
                })).collect(Collectors.toList());

        if (people.stream().allMatch(Objects::isNull)||products.stream().allMatch(Objects::isNull)){
            return;
        }

        String input = scanner.nextLine();

        while (!"END".equals(input)) {

            String[] tokens = input.split("\\s+");
            String person = tokens[0];
            String product = tokens[1];

            for (Person p : people) {
                if (p.getName().equals(person)) {
                    try {
                        Product productToBuy = products.stream()
                                .filter(prod -> prod.getName().equals(product))
                                .findFirst()
                                .orElseThrow(Exception::new);
                        p.buyProduct(productToBuy);
                        System.out.println(person + " bought " + product);
                    } catch (IllegalArgumentException ex) {
                        System.out.println(ex.getMessage());
                    }
                }
            }

            input = scanner.nextLine();
        }

        for (Person person : people) {
            System.out.println(person.toString());
        }
    }
}
