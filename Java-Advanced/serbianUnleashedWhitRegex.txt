import java.util.LinkedHashMap;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class serbianUnleashedWhitRegex {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        LinkedHashMap<String, LinkedHashMap<String, Integer>> concerts = new LinkedHashMap<>();
        String regex = "^(?<singer>[A-Za-z A-Za-z]+) @(?<venue>[A-Za-z A-Za-z]+) (?<price>\\d+) (?<count>\\d+)$";
        Pattern pattern = Pattern.compile(regex);
        String input = scanner.nextLine();

        while (!input.equals("End")) {

            Matcher matcher = pattern.matcher(input);

            if (matcher.find()) {
                String singer = matcher.group("singer");
                String venue = matcher.group("venue");
                int price = Integer.parseInt(matcher.group("price"));
                int count = Integer.parseInt(matcher.group("count"));

                if (!concerts.containsKey(venue)) {
                    LinkedHashMap<String, Integer> singers = new LinkedHashMap<>();
                    singers.put(singer, price * count);
                    concerts.put(venue, singers);
                } else {
                    LinkedHashMap<String, Integer> currentSingers = concerts.get(venue);
                    if (currentSingers.containsKey(singer)) {
                        currentSingers.put(singer, currentSingers.get(singer) + price * count);
                    } else {
                        currentSingers.put(singer, price * count);
                    }
                    concerts.put(venue, currentSingers);
                }
            }
            input = scanner.nextLine();
        }
        for (String venue : concerts.keySet()) {
            System.out.println(venue);

            LinkedHashMap<String, Integer> singers = concerts.get(venue);
            singers.entrySet().stream().sorted((singer1, singer2) -> singer2.getValue().compareTo(singer1.getValue()))
                    .forEach(singer -> System.out.println(String.format("#  %s -> %d", singer.getKey(), singer.getValue())));

        }
    }
}
