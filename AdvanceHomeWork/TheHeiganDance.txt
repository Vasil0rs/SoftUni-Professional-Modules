import java.util.Scanner;

public class TheHeiganDance {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        double points = 3000000.0;
        int playerPoints = 18500;
        int startRow = 7;
        int startCol = 7;

        String lastSpell = "";
        boolean isActive = false;
        double damage = Double.parseDouble(scanner.nextLine());

        while (playerPoints > 0 && points > 0) {
            points -= damage;

            if (isActive) {
                playerPoints -= 3500;
                isActive = false;

                if (playerPoints < 0) {
                    break;
                }
            }
            if (points < 0) {
                break;
            }

            String[] tokens = scanner.nextLine().split("\\s+");
            String spell = tokens[0];
            int rows = Integer.parseInt(tokens[1]);
            int cols = Integer.parseInt(tokens[2]);

            boolean[][] matrix = new boolean[15][15];
            for (int row = rows - 1; row <= rows + 1; row++) {
                if (row >= 0 && row < matrix.length) {
                    for (int col = cols - 1; col <= cols + 1; col++) {

                        if (col >= 0 && col < matrix[rows].length) {
                            matrix[row][col] = true;
                        }
                    }
                }
            }
            if (matrix[startRow][startCol]) {
                if (isRowValid(matrix, startRow - 1) && !matrix[startRow - 1][startCol]) {
                    startRow--; // move up
                } else if (isColValid(matrix, startCol + 1) && !matrix[startRow][startCol + 1]) {
                    startCol++; // move right
                } else if (isRowValid(matrix, startRow + 1) && !matrix[startRow + 1][startCol]) {
                    startRow++; // move down
                } else if (isColValid(matrix, startCol - 1) && !matrix[startRow][startCol - 1]) {
                    startCol--; // move left
                }

                if (matrix[startRow][startCol]) {
                    switch (spell) {
                        case "Cloud":
                            playerPoints -= 3500;
                            isActive = true;
                            lastSpell = "Plague Cloud";
                            break;
                        case "Eruption":
                            playerPoints -= 6000;
                            lastSpell = spell;
                            break;
                        default:
                    }
                }
            }
        }

        if (points > 0) {
            System.out.println(String.format("Heigan: %.2f", points));
        } else {
            System.out.println("Heigan: Defeated!");
        }
        if (playerPoints > 0) {
            System.out.println(String.format("Player: %d", playerPoints));
        } else {
            System.out.println("Player: Killed by " + lastSpell);
        }

        System.out.println("Final position: " + startRow + ", " + startCol);
    }

    private static boolean isRowValid(boolean[][] hsChamber, int startPlRow) {
        return startPlRow >= 0 && startPlRow < hsChamber[startPlRow].length;
    }

    private static boolean isColValid(boolean[][] hsChamber, int startPlCol) {
        return startPlCol >= 0 && startPlCol < hsChamber.length;
        }
    }
